name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    runs-on: gh-runners

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Deploy to production
        run: |
          # Check if production app exists
          if doctl apps get throw-nullreference-io &>/dev/null; then
            echo "Updating existing production app..."
            doctl apps update throw-nullreference-io --spec .do/app.yaml
            
            # Create deployment and wait
            APP_ID=$(doctl apps get throw-nullreference-io --format ID --no-header)
            doctl apps create-deployment $APP_ID --wait
          else
            echo "Creating production app..."
            doctl apps create --spec .do/app.yaml --wait
          fi

      - name: Get deployment URL
        id: deployment
        run: |
          APP_URL=$(doctl apps get throw-nullreference-io --format LiveURL --no-header)
          echo "url=$APP_URL" >> $GITHUB_OUTPUT

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deployment.outputs.url }}';

            // Create deployment
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              production_environment: true,
              auto_merge: false,
              required_contexts: []
            });

            // Create deployment status
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: deploymentUrl,
              description: 'Deployed to DigitalOcean App Platform'
            });
