name: PR Checks

on:
  pull_request:
    branches: [main, update]
  push:
    branches: [main]

env:
  NODE_VERSION: '20'
  YARN_CACHE_KEY: yarn-cache-v2

jobs:
  # Dependency security audit
  security:
    name: Security Audit
    runs-on: gh-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Run security audit
        run: yarn audit --groups dependencies

      - name: Check for vulnerabilities
        run: |
          if yarn audit --level moderate --groups dependencies; then
            echo "No moderate or higher vulnerabilities found"
          else
            echo "Security vulnerabilities detected. Please review and update dependencies."
            exit 1
          fi

  lint:
    name: Lint
    runs-on: gh-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Run ESLint
        run: yarn lint

      - name: Check formatting
        run: yarn format:check

  typecheck:
    name: Type Check
    runs-on: gh-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Run TypeScript check
        run: yarn typecheck

  test:
    name: Test
    runs-on: gh-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Run tests
        run: yarn test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: gh-runners
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build application
        run: timeout 10m yarn build --no-lint

      - name: Check build output
        run: |
          if [ ! -d "out" ]; then
            echo "Build failed: 'out' directory not found"
            exit 1
          fi
          echo "Build successful: 'out' directory exists"
          ls -la out/

  all-checks:
    name: All Checks Passed
    needs: [security, lint, typecheck, test, build]
    runs-on: gh-runners
    if: always()
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.security.result }}" != "success" || 
                "${{ needs.lint.result }}" != "success" || 
                "${{ needs.typecheck.result }}" != "success" || 
                "${{ needs.test.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" ]]; then
            echo "One or more checks failed"
            exit 1
          fi
          echo "All checks passed!"
